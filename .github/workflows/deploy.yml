name: Deploy to DigitalOcean

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /app/test_atlas
            
            echo "üöÄ Starting deployment..."
            
            # Pull latest changes
            echo "üì• Pulling latest changes from master..."
            git pull origin master
            
            # Determine which docker compose command to use
            
            DOCKER_COMPOSE="docker compose"
            
            echo "Using: $DOCKER_COMPOSE"
            
                         # Stop containers
             echo "üõë Stopping containers..."
             $DOCKER_COMPOSE -f docker-compose.prod.yml down
             
             # Rebuild and start containers
             echo "üî® Building and starting containers..."
             $DOCKER_COMPOSE -f docker-compose.prod.yml up -d --build
            
            # Clean up unused Docker images
            echo "üßπ Cleaning up unused Docker images..."
            docker image prune -f
            
            echo "‚úÖ Deployment completed successfully!"
          EOF

      - name: Verify deployment
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /app/test_atlas
            echo "üîç Verifying deployment..."
            
                         # Use the same logic to determine docker compose command
             if command -v docker-compose &> /dev/null; then
               docker-compose -f docker-compose.prod.yml ps
             elif docker compose version &> /dev/null; then
               docker compose -f docker-compose.prod.yml ps
             else
               echo "‚ùå Docker compose not available for verification"
               docker ps
             fi
            
            echo "üìä Deployment verification completed!"
          EOF
